#!/usr/bin/env python3
"""
RESTORE REAL DATA TO VOLUME
–ö–æ–ø–∏—Ä—É–µ—Ç –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ database.json –≤ volume
"""

import json
import base64
import requests
import os

def restore_real_data_to_volume():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ volume —á–µ—Ä–µ–∑ API"""
    
    # –ß–∏—Ç–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π database.json
    if not os.path.exists("data/database.json"):
        print("‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π database.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    with open("data/database.json", "r", encoding="utf-8") as f:
        real_data = f.read()
    
    print(f"üìä –õ–æ–∫–∞–ª—å–Ω—ã–π database.json: {len(real_data)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏
    encoded_data = base64.b64encode(real_data.encode('utf-8')).decode('ascii')
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    restore_script = f'''
import json
import base64
import os

# –î–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
encoded_data = "{encoded_data}"
real_data = base64.b64decode(encoded_data).decode('utf-8')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON
try:
    json.loads(real_data)
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã")
except Exception as e:
    print(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {{e}}")
    exit(1)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ volume
volume_path = "/app/data/database.json"
try:
    with open(volume_path, 'w', encoding='utf-8') as f:
        f.write(real_data)
    print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {{volume_path}}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
    size = os.path.getsize(volume_path)
    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {{size}} –±–∞–π—Ç")
    
    # –°–æ–∑–¥–∞–µ–º backup
    backup_path = "/app/data/backups/real_data_restore_backup.json"
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(real_data)
    print(f"üíæ Backup —Å–æ–∑–¥–∞–Ω: {{backup_path}}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {{e}}")
    exit(1)

print("‚úÖ –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–´!")
'''
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç
    with open("temp_restore_script.py", "w") as f:
        f.write(restore_script)
    
    print("üìù –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω: temp_restore_script.py")
    return True

if __name__ == "__main__":
    restore_real_data_to_volume()