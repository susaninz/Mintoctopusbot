#!/usr/bin/env python3
"""
üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô HOTFIX
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç database.json —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import json
import os
import shutil
from datetime import datetime

def hotfix_database_force():
    """–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å database.json"""
    
    print("üö® HOTFIX: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–ó–ê–ü–ò–°–¨ DATABASE.JSON")
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    real_data = {
        "masters": [
            {
                "telegram_id": "494449214",
                "name": "–í–∞–Ω—è –°–ª—ë–∑–∫–∏–Ω", 
                "telegram_handle": "@ivanslyozkin",
                "original_description": "–° –¥–µ—Ç—Å—Ç–≤–∞ –ª—é–±–∏–ª –¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∞–∂–∏ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª –∫–∞–∫ –Ω—É–∂–Ω–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å. –ê —Å 11 –ª–µ—Ç —É –º–µ–Ω—è —É–∂–µ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –±–æ–ª–µ–ª–∞ —Å–ø–∏–Ω–∞ —É —Å–∞–º–æ–≥–æ, —è –ø—Ä–æ—à–µ–ª —Å–ª–æ–∂–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –±—ã–ª –ø—Ä–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω –∫–æ–º–ø—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–π –ø–µ—Ä–µ–ª–æ–º –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–∞ –∏ –∫—É—á–∞ –≤—Å–µ–≥–æ. –ù–æ, —Å–ø—É—Å—Ç—è –≤—Ä–µ–º—è –∏ –ø—É—Ç–µ–º –ø–µ—Ä–µ–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥–æ–≤ —è –Ω–∞ –Ω–æ–≥–∞—Ö –∏ —Ö–æ—á—É –ø–æ–º–æ–≥–∞—Ç—å –æ–∫—Ä—É–∂–∞—é—â–∏–º —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏. –£—á–∏–ª—Å—è –Ω–∞ –ë–∞–ª–∏, –ª—é–±–ª—é –¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∞–∂ –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–º —Ç–æ—á–∫–∞–º, –∏–º–µ—é—Ç—Å—è –∞–ø–ø–ª–∏–∫–∞—Ç–æ—Ä –ö—É–∑–Ω–µ—Ü–æ–≤–∞ –∏ –õ—è–ø–∫–æ, –∞–ø–ø–∞—Ä–∞—Ç compex –¥–ª—è —Ñ–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏–∏, –ø–µ—Ä–∫—É—Å–∏–æ–Ω–Ω—ã–π –º–∞—Å—Å–∞–∂–µ—Ä.",
                "services": ["–º–∞—Å—Å–∞–∂"],
                "time_slots": [],
                "is_active": True,
                "created_at": "2025-08-01T17:10:51.511768",
                "bookings": [],
                "location_preference": "–ì–ª—ç–º–ø–∏–Ω–≥ –∏ –°–ø–∞—Å–∞–ª–∫–∞",
                "fantasy_description": "–í —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≥–ª—É–±–∏–Ω–∞—Ö –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞, –≥–¥–µ –≤–µ–∫–æ–≤—ã–µ –¥–µ—Ä–µ–≤—å—è —à–µ–ø—á—É—Ç —Ç–∞–π–Ω—ã –∑–¥–æ—Ä–æ–≤—å—è, –æ–±–∏—Ç–∞–µ—Ç –º–∞—Å—Ç–µ—Ä –í–∞–Ω—è –°–ª—ë–∑–∫–∏–Ω. –ï—â—ë –≤ —Ä–∞–Ω–Ω–µ–π —é–Ω–æ—Å—Ç–∏, –æ–Ω –Ω–∞—É—á–∏–ª—Å—è —Å–ª—É—à–∞—Ç—å –ø–µ—Å–Ω–∏ –º—ã—à—Ü –∏ –∏—Å–∫–∞—Ç—å –≥–∞—Ä–º–æ–Ω–∏—é –≤ –¥–≤–∏–∂–µ–Ω–∏–∏, —Å–∞–º –ø—Ä–µ–æ–¥–æ–ª–µ–≤ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–π –ø—É—Ç—å –∏—Å—Ü–µ–ª–µ–Ω–∏—è."
            },
            {
                "telegram_id": "958532944",
                "name": "–ö–æ–ª—è –ë–æ–≥–∞—Ç–∏—â–µ–≤",
                "telegram_handle": "@nik1678", 
                "original_description": "–Æ–º—ç–π—Ö–æ (—è–ø–æ–Ω—Å–∫–∞—è –º–µ—Ç–æ–¥–∏–∫–∞ –º–∏–æ—Ñ–∞—Å—Ü–∏–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∞–∂–∞)",
                "services": ["–º–∞—Å—Å–∞–∂"],
                "time_slots": [],
                "is_active": True,
                "created_at": "2025-08-01T17:10:51.511768",
                "bookings": [],
                "location_preference": "–ë–∞–Ω—è",
                "fantasy_description": "–ú–∞—Å—Ç–µ—Ä –¥—Ä–µ–≤–Ω–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ –ö–æ–ª—è –ë–æ–≥–∞—Ç–∏—â–µ–≤ –≤–ª–∞–¥–µ–µ—Ç —Ç–∞–π–Ω—ã–º –∏—Å–∫—É—Å—Å—Ç–≤–æ–º –Æ–º—ç–π—Ö–æ - —è–ø–æ–Ω—Å–∫–æ–π –º–µ—Ç–æ–¥–∏–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º—ã—à—Ü—ã –æ—Ç –æ–∫–æ–≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–ª—É —É—Ç—Ä–∞—á–µ–Ω–Ω—É—é –≥–∞—Ä–º–æ–Ω–∏—é."
            }
        ],
        "bookings": [],
        "device_bookings": [],
        "devices": [
            {
                "id": "vibro_chair",
                "name": "–í–∏–±—Ä–æ–∫—Ä–µ—Å–ª–æ",
                "owner_telegram_handle": "@fshubin",
                "admin": True,
                "slots": [],
                "bookings": []
            }
        ],
        "stats": {
            "total_masters": 2,
            "total_bookings": 0,
            "total_devices": 1,
            "last_updated": "2025-08-02T14:50:00.000000"
        }
    }
    
    # –ü—É—Ç–∏
    database_path = "/app/data/database.json"
    
    # –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ volume –ø—Ä–∏–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
    if not os.path.exists("/app/data"):
        print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: /app/data –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!")
        print("üîç Volume –ù–ï –ü–†–ò–ú–û–ù–¢–ò–†–û–í–ê–ù –∏–ª–∏ Railway –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        print("üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—É—Ç–µ–π –≤ /app:")
        try:
            for item in os.listdir("/app"):
                print(f"  - {item}")
        except:
            print("  ‚ùå /app –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if os.path.exists(database_path):
        current_size = os.path.getsize(database_path)
        print(f"üîç –¢–µ–∫—É—â–∏–π database.json: {current_size} –±–∞–π—Ç")
        
        # –°–æ–∑–¥–∞–µ–º backup
        backup_path = f"{database_path}.hotfix_backup_{datetime.now().strftime('%H%M%S')}"
        shutil.copy2(database_path, backup_path)
        print(f"üíæ Backup —Å–æ–∑–¥–∞–Ω: {backup_path}")
    else:
        print("‚ùå database.json –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –≤ –ø—Ä–∏–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º volume!")
        print("üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app/data:")
        try:
            for item in os.listdir("/app/data"):
                print(f"  - {item}")
        except:
            print("  ‚ùå /app/data –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è")
    
    # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º
    try:
        with open(database_path, 'w', encoding='utf-8') as f:
            json.dump(real_data, f, ensure_ascii=False, indent=2)
        
        new_size = os.path.getsize(database_path)
        print(f"‚úÖ HOTFIX COMPLETED! –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: {new_size} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(database_path, 'r', encoding='utf-8') as f:
            check_data = json.load(f)
        
        masters_count = len(check_data.get("masters", []))
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–π–¥–µ–Ω–æ {masters_count} –º–∞—Å—Ç–µ—Ä–æ–≤")
        
        for master in check_data.get("masters", []):
            print(f"  üë§ {master.get('name')} ({master.get('telegram_id')})")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê HOTFIX: {e}")
        return False

if __name__ == "__main__":
    hotfix_database_force()