"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""
import logging
from typing import Dict, Any
from telegram import Update
from telegram.ext import ContextTypes

from bot.services.data_service import DataService
from bot.services.master_service import MasterService
from bot.utils.formatters import format_master_profile

logger = logging.getLogger(__name__)


class AdminHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    
    def __init__(self, data_service: DataService):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
        
        Args:
            data_service: –°–µ—Ä–≤–∏—Å –¥–∞–Ω–Ω—ã—Ö
        """
        self.data_service = data_service
        self.master_service = MasterService(data_service)
    
    def is_admin(self, user_id: str) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
        
        Args:
            user_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            bool: True –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        """
        import os
        admin_ids = os.getenv("ADMIN_IDS", "").split(",")
        return str(user_id) in admin_ids
    
    async def show_pending_masters(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.
        
        Args:
            update: Telegram update
            context: Telegram context
        """
        user_id = str(update.effective_user.id)
        
        if not self.is_admin(user_id):
            await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
            return
        
        pending_masters = self.master_service.get_pending_verification_masters()
        
        if not pending_masters:
            await update.message.reply_text("‚úÖ –í—Å–µ –º–∞—Å—Ç–µ—Ä–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!")
            return
        
        message = "üîç **–ú–ê–°–¢–ï–†–ê –ë–ï–ó –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò:**\n\n"
        
        for i, master in enumerate(pending_masters, 1):
            name = master.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")
            handle = master.get("telegram_handle", "–ë–µ–∑ @username")
            slots_count = len(master.get("time_slots", []))
            bookings_count = len(master.get("bookings", []))
            
            message += (
                f"{i}. **{name}**\n"
                f"   üì± {handle}\n"
                f"   üìÖ –°–ª–æ—Ç–æ–≤: {slots_count} | –ó–∞–ø–∏—Å–µ–π: {bookings_count}\n\n"
            )
        
        message += (
            "üí° **–ö–∞–∫ –ø—Ä–∏–≤—è–∑–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞:**\n"
            "`/link_master –ò–º—è –ú–∞—Å—Ç–µ—Ä–∞ @telegram_id`\n\n"
            "üìã **–ò–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞:**\n"
            "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å @username –≤ Telegram\n"
            "2. –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º @username\n"
            "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        )
        
        await update.message.reply_text(message, parse_mode='Markdown')
    
    async def link_master_manually(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –†—É—á–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–∞ –∫ telegram ID.
        
        Args:
            update: Telegram update
            context: Telegram context
        """
        user_id = str(update.effective_user.id)
        
        if not self.is_admin(user_id):
            await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
            return
        
        if len(context.args) < 2:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/link_master –ò–º—è –ú–∞—Å—Ç–µ—Ä–∞ telegram_id`\n"
                "–ü—Ä–∏–º–µ—Ä: `/link_master –ö–æ–ª—è –ë–æ–≥–∞—Ç–∏—â–µ–≤ 123456789`",
                parse_mode='Markdown'
            )
            return
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç - telegram_id, –æ—Å—Ç–∞–ª—å–Ω—ã–µ - –∏–º—è
        telegram_id = context.args[-1]
        master_name = " ".join(context.args[:-1])
        
        if not telegram_id.isdigit():
            await update.message.reply_text("‚ùå Telegram ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
            return
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É
        success = self.master_service.manually_link_master(master_name, telegram_id)
        
        if success:
            await update.message.reply_text(
                f"‚úÖ **–ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–≤—è–∑–∞–Ω!**\n\n"
                f"üë§ **{master_name}**\n"
                f"üÜî Telegram ID: `{telegram_id}`\n\n"
                f"–¢–µ–ø–µ—Ä—å –º–∞—Å—Ç–µ—Ä –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ –≤ –±–æ—Ç–∞!",
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏!**\n\n"
                f"–ú–∞—Å—Ç–µ—Ä '{master_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.\n"
                f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–Ω–∏."
            )
    
    async def show_all_masters_status(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤.
        
        Args:
            update: Telegram update
            context: Telegram context
        """
        user_id = str(update.effective_user.id)
        
        if not self.is_admin(user_id):
            await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
            return
        
        all_masters = self.data_service.get_all_masters()
        
        if not all_masters:
            await update.message.reply_text("üòû –ú–∞—Å—Ç–µ—Ä–æ–≤ –Ω–µ—Ç –≤ –±–∞–∑–µ")
            return
        
        verified_count = 0
        pending_count = 0
        
        message = "üìä **–°–¢–ê–¢–£–° –í–°–ï–• –ú–ê–°–¢–ï–†–û–í:**\n\n"
        
        for master in all_masters:
            name = master.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")
            telegram_id = master.get("telegram_id", "")
            handle = master.get("telegram_handle", "–ù–µ—Ç @username")
            slots_count = len(master.get("time_slots", []))
            bookings_count = len(master.get("bookings", []))
            
            if telegram_id.isdigit() and len(telegram_id) >= 8:
                status = "‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
                verified_count += 1
            else:
                status = "‚ùå –û–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
                pending_count += 1
            
            message += (
                f"üë§ **{name}**\n"
                f"   üîπ {status}\n"
                f"   üì± {handle}\n"
                f"   üìÖ {slots_count} —Å–ª–æ—Ç–æ–≤, {bookings_count} –∑–∞–ø–∏—Å–µ–π\n\n"
            )
        
        summary = (
            f"üìà **–ò–¢–û–ì–û:**\n"
            f"‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ: {verified_count}\n"
            f"‚ùå –û–∂–∏–¥–∞—é—Ç: {pending_count}\n"
            f"üë• –í—Å–µ–≥–æ: {len(all_masters)}"
        )
        
        await update.message.reply_text(message + summary, parse_mode='Markdown')
    
    async def help_admin(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º.
        
        Args:
            update: Telegram update
            context: Telegram context
        """
        user_id = str(update.effective_user.id)
        
        if not self.is_admin(user_id):
            await update.message.reply_text("üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
            return
        
        help_text = """
üîß **–ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê:**

üìã `/pending_masters` - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
üîó `/link_master –ò–º—è telegram_id` - –†—É—á–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–∞
üìä `/masters_status` - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
‚ùì `/admin_help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí° **–ü—Ä–∏–º–µ—Ä—ã:**
‚Ä¢ `/link_master –ö–æ–ª—è –ë–æ–≥–∞—Ç–∏—â–µ–≤ 123456789`
‚Ä¢ `/link_master –ê–Ω—è –ö–∞—à–∏—Ä–∏–Ω–∞ 987654321`

‚ö†Ô∏è **–í–∞–∂–Ω–æ:**
- Telegram ID –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –Ω–∞–ø–∏—Å–∞–≤ @userinfobot
- –ò–º—è –¥–æ–ª–∂–Ω–æ —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –±–∞–∑–µ
- –ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –º–∞—Å—Ç–µ—Ä —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø
        """
        
        await update.message.reply_text(help_text, parse_mode='Markdown')