#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–æ—Ç–∞.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å—Ç–∏–ª–µ –ú—è—Ç–Ω–æ–≥–æ –ó–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞.
"""

import json
import os
from datetime import datetime
from dotenv import load_dotenv
from services.gpt_service import GPTService

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def load_client_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."""
    with open('client_notifications.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def load_database():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞."""
    with open('data/database.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def find_client_bookings(client_username, masters):
    """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
    bookings = []
    
    for master in masters:
        for booking in master.get('bookings', []):
            if (booking.get('client_username') == client_username or 
                booking.get('client_name') == client_username):
                bookings.append({
                    'master_name': booking['master_name'],
                    'date': booking['slot_date'],
                    'time': f"{booking['slot_start_time']}-{booking['slot_end_time']}",
                    'location': booking['location']
                })
    
    return bookings

def generate_migration_notification(gpt_service, client_username, client_bookings):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º–∏–≥—Ä–∞—Ü–∏–∏."""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å—è—Ö
    bookings_info = ""
    if client_bookings:
        bookings_info = "\\n\\n–¢–≤–æ–∏ –∑–∞–ø–∏—Å–∏ –≤ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–µ:\\n"
        for i, booking in enumerate(client_bookings[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3 –∑–∞–ø–∏—Å–∏
            date_formatted = datetime.strptime(booking['date'], '%Y-%m-%d').strftime('%d.%m')
            bookings_info += f"‚Ä¢ {booking['master_name']}, {date_formatted} –≤ {booking['time']}, {booking['location']}\\n"
        
        if len(client_bookings) > 3:
            bookings_info += f"‚Ä¢ ...–∏ –µ—â—ë {len(client_bookings) - 3} –∑–∞–ø–∏—Å–µ–π\\n"
    
    prompt = f"""
–¢—ã - –¥—É—Ö –ú—è—Ç–Ω–æ–≥–æ –ó–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞, –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –∏—Å—Ü–µ–ª–µ–Ω–∏—è –∏ –≥–∞—Ä–º–æ–Ω–∏–∏. üêôüåä

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client_username}.

–ö–û–ù–¢–ï–ö–°–¢:
‚Ä¢ –ö–ª–∏–µ–Ω—Ç —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ –º–∞—Å—Å–∞–∂–∏ —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—É—é Google —Ç–∞–±–ª–∏—á–∫—É
‚Ä¢ –¢–µ–ø–µ—Ä—å –≤—Å—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–µ—Ö–∞–ª–∞ –≤ —ç—Ç–æ–≥–æ –±–æ—Ç–∞  
‚Ä¢ –ù—É–∂–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å
‚Ä¢ –ö–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–Ω—è—Ç—å, —á—Ç–æ –µ–≥–æ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã{bookings_info}

–°–¢–†–£–ö–¢–£–†–ê –°–û–û–ë–©–ï–ù–ò–Ø:
1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —Å—Ç–∏–ª–µ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞
2. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–µ—Ö–∞–ª–∞ –≤ –±–æ—Ç–∞
3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å)
4. –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
5. –ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —á—Ç–æ –¥–µ–ª–∞—Ç—å
6. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –≤ —Å—Ç–∏–ª–µ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞

–°–¢–ò–õ–¨ –ù–ê–ü–ò–°–ê–ù–ò–Ø:
‚Ä¢ –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –æ–±—Ä–∞–∑—ã –≤–æ–¥—ã, –≥–ª—É–±–∏–Ω, –∏—Å—Ü–µ–ª–µ–Ω–∏—è, –ø—Ä–∏—Ä–æ–¥—ã
‚Ä¢ –î–æ–±–∞–≤–ª—è–π —ç–º–æ–¥–∑–∏ –æ–∫–µ–∞–Ω–∞/–º–∏—Å—Ç–∏–∫–∏: üêôüåäüí´‚ú®üåø
‚Ä¢ –¢–æ–Ω —Ä–∞–¥–æ—Å—Ç–Ω—ã–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π, –Ω–æ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–π
‚Ä¢ –ú–∞–∫—Å 5-6 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ username –∫–ª–∏–µ–Ω—Ç–∞ –ª–∏—á–Ω–æ

–ü–†–ò–ú–ï–†–´ –ú–ò–°–¢–ò–ß–ï–°–ö–ò–• –§–†–ê–ó:
‚Ä¢ "–ü–æ—Ç–æ–∫–∏ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞ –ø—Ä–∏–Ω–µ—Å–ª–∏ –≤–µ—Å—Ç—å..."
‚Ä¢ "–ì–ª—É–±–∏–Ω—ã —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∏..."  
‚Ä¢ "–ú—è—Ç–Ω—ã–µ —Ç–µ—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–∏–ª–∏—Å—å..."
‚Ä¢ "–ò—Å—Ü–µ–ª—è—é—â–∏–µ –≤–æ–¥—ã —Ç–µ–ø–µ—Ä—å —Ç–µ–∫—É—Ç —á–µ—Ä–µ–∑..."
‚Ä¢ "–î—É—Ö–∏ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π –ø–æ—Ä—Ç–∞–ª..."

–ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ë–û–¢–ê (–≤—ã–±–µ—Ä–∏ 2-3):
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –£–¥–æ–±–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–µ–π
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –º–∞—Å—Å–∞–∂–µ–π
‚Ä¢ –ü—Ä—è–º–∞—è —Å–≤—è–∑—å —Å –º–∞—Å—Ç–µ—Ä–∞–º–∏
‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π

–ù–ï –£–ü–û–ú–ò–ù–ê–¢–¨:
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏  
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã

–°–æ–∑–¥–∞–π –ü–ï–†–°–û–ù–ê–õ–¨–ù–û–ï —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:
"""

    try:
        response = gpt_service.client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã - –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –¥—É—Ö –ú—è—Ç–Ω–æ–≥–æ –ó–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞, —Å–æ–∑–¥–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–æ—Ç–∞."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=500,
            temperature=0.8
        )
        
        return response.choices[0].message.content.strip()
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è {client_username}: {e}")
        
        # Fallback —Å–æ–æ–±—â–µ–Ω–∏–µ
        bookings_text = ""
        if client_bookings:
            first_booking = client_bookings[0]
            date_formatted = datetime.strptime(first_booking['date'], '%Y-%m-%d').strftime('%d.%m')
            bookings_text = f"\\n\\nüìÖ –¢–≤–æ—è –±–ª–∏–∂–∞–π—à–∞—è –∑–∞–ø–∏—Å—å: {first_booking['master_name']}, {date_formatted} –≤ {first_booking['time']}, {first_booking['location']}"
        
        return f"""üêô –ü–æ—Ç–æ–∫–∏ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞ –ø—Ä–∏–Ω–µ—Å–ª–∏ –≤–µ—Å—Ç—å, {client_username}!

–ú—è—Ç–Ω—ã–µ –≥–ª—É–±–∏–Ω—ã —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ –º–∞—Å—Å–∞–∂–∏ –±—Ä–æ–Ω–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞! ‚ú® –¢–≤–æ–∏ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –∂–¥—É—Ç —Ç–µ–±—è.{bookings_text}

üåä –ß—Ç–æ –Ω–æ–≤–æ–≥–æ:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –£–¥–æ–±–Ω–∞—è –æ—Ç–º–µ–Ω–∞ —á–µ—Ä–µ–∑ –±–æ—Ç
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö —Å–µ–∞–Ω—Å–æ–≤

–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start –∏ –æ–∫—É–Ω–∏—Å—å –≤ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –≤–æ–¥—ã –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞! üí´"""

def main():
    print('üì® –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô')
    print('=' * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    client_data = load_client_data()
    database = load_database()
    
    clients = client_data['clients']
    masters = database.get('masters', [])
    
    print(f'üë• –ö–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {len(clients)}')
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GPT —Å–µ—Ä–≤–∏—Å
    gpt_service = GPTService()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notifications = {}
    
    for i, client_username in enumerate(clients, 1):
        print(f'\\nüîÑ [{i}/{len(clients)}] –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–ª—è {client_username}...')
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞
        client_bookings = find_client_bookings(client_username, masters)
        
        if client_bookings:
            print(f'   üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(client_bookings)}')
        else:
            print(f'   ‚ö†Ô∏è –ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification = generate_migration_notification(
            gpt_service, 
            client_username, 
            client_bookings
        )
        
        notifications[client_username] = {
            'message': notification,
            'bookings_count': len(client_bookings),
            'generated_at': datetime.now().isoformat()
        }
        
        print(f'   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ({len(notification)} —Å–∏–º–≤–æ–ª–æ–≤)')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    output_data = {
        'notifications': notifications,
        'total_clients': len(clients),
        'generation_date': datetime.now().isoformat(),
        'migration_info': client_data
    }
    
    with open('client_notifications_generated.json', 'w', encoding='utf-8') as f:
        json.dump(output_data, f, ensure_ascii=False, indent=2)
    
    print(f'\\nüíæ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ client_notifications_generated.json')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print(f'\\nüìã –ü–†–ò–ú–ï–†–´ –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:')
    print('=' * 50)
    
    for i, (client, data) in enumerate(list(notifications.items())[:3]):
        print(f'\\nüë§ {client}:')
        print('‚îÄ' * 30)
        print(data['message'])
        
        if i < 2:
            print()
    
    if len(notifications) > 3:
        print(f'\\n... –∏ –µ—â—ë {len(notifications) - 3} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    
    print(f'\\nüéä –ì–û–¢–û–í–û! –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è {len(clients)} –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã!')
    print('\\nüì¨ –ì–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –±–æ—Ç–∞!')

if __name__ == '__main__':
    main()