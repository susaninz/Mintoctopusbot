#!/usr/bin/env python3
"""
Debug —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ environment variables –≤ production
"""
import os
import logging
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def debug_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã environment variables –¥–ª—è OpenAI API"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ENVIRONMENT VARIABLES")
    print("=" * 60)
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env –µ—Å–ª–∏ –µ—Å—Ç—å
    print("üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª...")
    try:
        load_dotenv()
        print("‚úÖ load_dotenv() –≤—ã–ø–æ–ª–Ω–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ load_dotenv(): {e}")
    
    print()
    print("üîë –ü–†–û–í–ï–†–ö–ê OPENAI API –ö–õ–Æ–ß–ï–ô:")
    
    # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π
    openai_variants = [
        "OPENAI_API_KEY",
        "OPENAI_KEY", 
        "OpenAI_API_Key",
        "OPEN_AI_API_KEY",
        "openai_api_key",
        "OPENAI_SECRET_KEY",
        "GPT_API_KEY",
        "OPENAI_TOKEN"
    ]
    
    found_keys = []
    
    for variant in openai_variants:
        value = os.getenv(variant)
        if value:
            # –ú–∞—Å–∫–∏—Ä—É–µ–º –∫–ª—é—á –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if len(value) > 8:
                masked = value[:4] + "..." + value[-4:]
            else:
                masked = "***"
            print(f"‚úÖ {variant}: {masked}")
            found_keys.append((variant, value))
        else:
            print(f"‚ùå {variant}: –ù–ï –ù–ê–ô–î–ï–ù")
    
    print()
    print("üîë –ù–ê–ô–î–ï–ù–ù–´–ï –ö–õ–Æ–ß–ò:")
    if found_keys:
        for variant, value in found_keys:
            print(f"   {variant} = {value[:4]}...{value[-4:]}")
    else:
        print("   ‚ùå –ù–ò –û–î–ù–û–ì–û –ö–õ–Æ–ß–ê –ù–ï –ù–ê–ô–î–ï–ù–û")
    
    print()
    print("üåê –í–°–ï ENVIRONMENT VARIABLES:")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ env vars —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    relevant_vars = []
    for key, value in os.environ.items():
        key_lower = key.lower()
        if any(keyword in key_lower for keyword in ['openai', 'gpt', 'api', 'key', 'token', 'secret']):
            if len(value) > 8:
                masked = value[:4] + "..." + value[-4:]
            else:
                masked = "***"
            relevant_vars.append((key, masked))
    
    if relevant_vars:
        for key, masked_value in relevant_vars:
            print(f"   {key}: {masked_value}")
    else:
        print("   ‚ùå –ù–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å API/–∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏")
    
    print()
    print("üß™ –¢–ï–°–¢ GPT SERVICE:")
    
    try:
        from services.gpt_service import GPTService
        gpt = GPTService()
        print(f"‚úÖ GPTService —Å–æ–∑–¥–∞–Ω, fallback_mode: {gpt.fallback_mode}")
        
        if not gpt.fallback_mode:
            print("üéâ GPT API –î–û–°–¢–£–ü–ï–ù!")
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
            try:
                test_result = gpt.parse_time_slots("–∑–∞–≤—Ç—Ä–∞ –≤ 14")
                print(f"‚úÖ –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —É—Å–ø–µ—à–µ–Ω: {test_result}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GPT: {e}")
        else:
            print("‚ö†Ô∏è GPT —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ fallback —Ä–µ–∂–∏–º–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GPTService: {e}")
    
    print()
    print("üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    
    if found_keys:
        print("‚úÖ API –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã, GPT –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ –∏ –¥–æ—Å—Ç—É–ø –∫ OpenAI API")
    else:
        print("‚ùå API –∫–ª—é—á–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ environment")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway.app environment variables")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ OPENAI_API_KEY")
    
    return found_keys

if __name__ == "__main__":
    debug_environment()